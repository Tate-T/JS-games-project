{"mappings":"C,A,WCAA,IAAM,EAAS,SAAS,cAAc,CAAC,WACjC,EAAM,EAAO,UAAU,CAAC,MAG1B,EAAY,CAAA,EACZ,EAAQ,EAAO,MAAM,CAAG,GACxB,EAAa,EACb,EAAY,EAAE,CACZ,EAAY,IAAI,MAChB,EAAc,IAAI,KACxB,CAAA,EAAU,GAAG,CAAG,+LAChB,EAAY,GAAG,CAAG,oIAClB,IAAI,EAAW,CAAA,EACX,EAAc,CAAA,EAGd,EAAuB,EAS3B,SAAS,gBAAgB,CAAC,UAAW,AAAA,IACd,SAAf,EAAM,IAAI,EAAgB,IACrB,IACD,EAAc,CAAA,EACd,AAqEZ,SAAS,IACL,EAAI,SAAS,CAAC,EAAG,EAAG,EAAO,KAAK,CAAE,EAAO,MAAM,EA3D/C,EAAI,SAAS,CAAC,EAAW,GAAI,EAAO,GAAI,IAIxC,EAAU,OAAO,CAAC,AAAA,IACd,EAAI,SAAS,CAAC,EAAa,EAAS,CAAC,CAAE,EAAO,MAAM,CAAG,EAAS,MAAM,CAAE,EAAS,KAAK,CAAE,EAAS,MAAM,CAC3G,GAIA,GAAS,EACT,GAjDY,GAmDR,GAAS,EAAO,MAAM,CAAG,KACzB,EAAQ,EAAO,MAAM,CAAG,GACxB,EAAa,EACb,EAAY,CAAA,GA+ChB,AA3CJ,WAKI,GAJA,EAAU,OAAO,CAAC,AAAA,IACd,EAAS,CAAC,EAAI,CAClB,GAEI,GAAwB,EACxB,CAAA,GAAI,AAAgB,IAAhB,KAAK,MAAM,GAAW,CACtB,IAAI,EAAe,KAAK,KAAK,CAAC,AAAgB,EAAhB,KAAK,MAAM,IAAU,EAC/C,EAAgB,EAAO,KAAK,CAChC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAc,IAAK,CAGnC,IAAI,EAAU,AAFG,EAEU,AAAiB,GAAjB,KAAK,MAAM,GACtC,EAAU,IAAI,CAAC,CACX,EAAG,EAAgB,EACnB,MAAO,GAAK,AAAgB,GAAhB,KAAK,MAAM,GACvB,OAAQ,GAAK,AAAgB,GAAhB,KAAK,MAAM,EAC5B,GACA,EAAgB,CAAS,CAAC,EAAU,MAAM,CAAG,EAAE,CAAC,CAAC,CAAG,CAAS,CAAC,EAAU,MAAM,CAAG,EAAE,CAAC,KAAK,AAC7F,CACA,EAjEgB,GAkEpB,CAAA,MAEA,IAGJ,EAAY,EAAU,MAAM,CAAC,AAAA,GAAY,EAAS,CAAC,CAAG,CAAC,EAAS,KAAK,CACzE,IAGI,EAAU,OAAO,CAAC,AAAA,IACV,EAAQ,IAAM,EAAO,MAAM,CAAG,EAAS,MAAM,EAAI,GAAS,EAAO,MAAM,EAAI,IAAW,EAAS,CAAC,EAAI,IAAM,EAAS,CAAC,CAAG,EAAS,KAAK,GACrI,EAAW,CAAA,EACX,SAAS,cAAc,CAAC,eAAe,KAAK,CAAC,OAAO,CAAG,QAE/D,GAUK,GACD,sBAAsB,GAE1B,GACJ,KA1FS,IAAa,IACd,EAAY,CAAA,EACZ,EAAa,KAYrB,GA8EA,SAAS,cAAc,CAAC,eAAe,OAAO,CA5E9C,WACI,SAAS,QAAQ,CAAC,MAAM,EAC5B,C","sources":["<anon>","src/js/dinosaur.js"],"sourcesContent":["(function () {\nvar $2d925b73e8222a71$exports = {};\nconst $2d925b73e8222a71$var$canvas = document.getElementById(\"canvass\");\nconst $2d925b73e8222a71$var$ctx = $2d925b73e8222a71$var$canvas.getContext(\"2d\");\nconst $2d925b73e8222a71$var$gravity = 0.5;\nconst $2d925b73e8222a71$var$jumpStrength = 11;\nlet $2d925b73e8222a71$var$isJumping = false;\nlet $2d925b73e8222a71$var$dinoY = $2d925b73e8222a71$var$canvas.height - 40;\nlet $2d925b73e8222a71$var$dinoYSpeed = 0;\nlet $2d925b73e8222a71$var$obstacles = [];\nconst $2d925b73e8222a71$var$dinoImage = new Image();\nconst $2d925b73e8222a71$var$cactusImage = new Image();\n$2d925b73e8222a71$var$dinoImage.src = \"https://w7.pngwing.com/pngs/39/802/png-transparent-gray-dinosaur-illustration-tyrannosaurus-t-shirt-dino-t-rex-runner-2-lonely-t-rex-run-2-google-chrome-8-bit-game-angle-text-thumbnail.png\";\n$2d925b73e8222a71$var$cactusImage.src = \"https://w7.pngwing.com/pngs/380/807/png-transparent-game-off-game-jam-gamedev-net-video-game-cactus-game-angle-text-thumbnail.png\";\nlet $2d925b73e8222a71$var$gameover = false;\nlet $2d925b73e8222a71$var$gameStarted = false;\nlet $2d925b73e8222a71$var$obstacleSpawnInterval = 100; // Інтервал між спавнами\nlet $2d925b73e8222a71$var$obstacleSpawnCounter = 0; // Лічильник для відстеження інтервалу\nfunction $2d925b73e8222a71$var$jump() {\n    if (!$2d925b73e8222a71$var$isJumping && $2d925b73e8222a71$var$gameStarted) {\n        $2d925b73e8222a71$var$isJumping = true;\n        $2d925b73e8222a71$var$dinoYSpeed = -$2d925b73e8222a71$var$jumpStrength;\n    }\n}\ndocument.addEventListener(\"keydown\", (event)=>{\n    if (event.code === \"KeyW\" && !$2d925b73e8222a71$var$gameover) {\n        if (!$2d925b73e8222a71$var$gameStarted) {\n            $2d925b73e8222a71$var$gameStarted = true;\n            $2d925b73e8222a71$var$draw();\n        }\n        $2d925b73e8222a71$var$jump();\n    }\n});\nfunction $2d925b73e8222a71$var$retry() {\n    document.location.reload();\n}\nfunction $2d925b73e8222a71$var$drawDino() {\n    $2d925b73e8222a71$var$ctx.drawImage($2d925b73e8222a71$var$dinoImage, 50, $2d925b73e8222a71$var$dinoY, 30, 30);\n}\nfunction $2d925b73e8222a71$var$drawObstacles() {\n    $2d925b73e8222a71$var$obstacles.forEach((obstacle)=>{\n        $2d925b73e8222a71$var$ctx.drawImage($2d925b73e8222a71$var$cactusImage, obstacle.x, $2d925b73e8222a71$var$canvas.height - obstacle.height, obstacle.width, obstacle.height);\n    });\n}\nfunction $2d925b73e8222a71$var$updateDino() {\n    $2d925b73e8222a71$var$dinoY += $2d925b73e8222a71$var$dinoYSpeed;\n    $2d925b73e8222a71$var$dinoYSpeed += $2d925b73e8222a71$var$gravity;\n    if ($2d925b73e8222a71$var$dinoY >= $2d925b73e8222a71$var$canvas.height - 40) {\n        $2d925b73e8222a71$var$dinoY = $2d925b73e8222a71$var$canvas.height - 40;\n        $2d925b73e8222a71$var$dinoYSpeed = 0;\n        $2d925b73e8222a71$var$isJumping = false;\n    }\n}\nfunction $2d925b73e8222a71$var$updateObstacles() {\n    $2d925b73e8222a71$var$obstacles.forEach((obstacle)=>{\n        obstacle.x -= 5;\n    });\n    if ($2d925b73e8222a71$var$obstacleSpawnCounter <= 0) {\n        if (Math.random() < 0.02) {\n            let numObstacles = Math.floor(Math.random() * 3) + 1; // Генеруємо випадкову кількість від 1 до 3\n            let lastObstacleX = $2d925b73e8222a71$var$canvas.width; // Зберігаємо x координату останнього куща для перевірки відступу\n            for(let i = 0; i < numObstacles; i++){\n                let minSpacing = 5; // Мінімальний відступ між кущами\n                let maxSpacing = 20; // Максимальний відступ між кущами\n                let spacing = minSpacing + Math.random() * (maxSpacing - minSpacing); // Випадкове значення відступу між кущами\n                $2d925b73e8222a71$var$obstacles.push({\n                    x: lastObstacleX + spacing,\n                    width: 20 + Math.random() * 10,\n                    height: 20 + Math.random() * 70\n                });\n                lastObstacleX = $2d925b73e8222a71$var$obstacles[$2d925b73e8222a71$var$obstacles.length - 1].x + $2d925b73e8222a71$var$obstacles[$2d925b73e8222a71$var$obstacles.length - 1].width; // Оновлюємо x координату останнього куща\n            }\n            $2d925b73e8222a71$var$obstacleSpawnCounter = $2d925b73e8222a71$var$obstacleSpawnInterval; // Скидаємо лічильник\n        }\n    } else $2d925b73e8222a71$var$obstacleSpawnCounter--;\n    $2d925b73e8222a71$var$obstacles = $2d925b73e8222a71$var$obstacles.filter((obstacle)=>obstacle.x > -obstacle.width);\n}\nfunction $2d925b73e8222a71$var$collisionDetection() {\n    $2d925b73e8222a71$var$obstacles.forEach((obstacle)=>{\n        if ($2d925b73e8222a71$var$dinoY + 30 >= $2d925b73e8222a71$var$canvas.height - obstacle.height && $2d925b73e8222a71$var$dinoY <= $2d925b73e8222a71$var$canvas.height && 80 >= obstacle.x && 50 <= obstacle.x + obstacle.width) {\n            $2d925b73e8222a71$var$gameover = true;\n            document.getElementById(\"retryButton\").style.display = \"block\";\n        }\n    });\n}\nfunction $2d925b73e8222a71$var$draw() {\n    $2d925b73e8222a71$var$ctx.clearRect(0, 0, $2d925b73e8222a71$var$canvas.width, $2d925b73e8222a71$var$canvas.height);\n    $2d925b73e8222a71$var$drawDino();\n    $2d925b73e8222a71$var$drawObstacles();\n    $2d925b73e8222a71$var$updateDino();\n    $2d925b73e8222a71$var$updateObstacles();\n    $2d925b73e8222a71$var$collisionDetection();\n    if (!$2d925b73e8222a71$var$gameover) requestAnimationFrame($2d925b73e8222a71$var$draw);\n    $2d925b73e8222a71$var$obstacleSpawnCounter--; // Додайте цей рядок для обнулення лічильника під час кожної анімаційної кадру\n}\ndocument.getElementById(\"retryButton\").onclick = $2d925b73e8222a71$var$retry;\n\n})();\n//# sourceMappingURL=index.bd889465.js.map\n","const canvas = document.getElementById('canvass');\nconst ctx = canvas.getContext('2d');\nconst gravity = 0.5;\nconst jumpStrength = 11;\nlet isJumping = false;\nlet dinoY = canvas.height - 40;\nlet dinoYSpeed = 0;\nlet obstacles = [];\nconst dinoImage = new Image();\nconst cactusImage = new Image();\ndinoImage.src = \"https://w7.pngwing.com/pngs/39/802/png-transparent-gray-dinosaur-illustration-tyrannosaurus-t-shirt-dino-t-rex-runner-2-lonely-t-rex-run-2-google-chrome-8-bit-game-angle-text-thumbnail.png\"\ncactusImage.src = 'https://w7.pngwing.com/pngs/380/807/png-transparent-game-off-game-jam-gamedev-net-video-game-cactus-game-angle-text-thumbnail.png';\nlet gameover = false;\nlet gameStarted = false;\n\nlet obstacleSpawnInterval = 100; // Інтервал між спавнами\nlet obstacleSpawnCounter = 0; // Лічильник для відстеження інтервалу\n\nfunction jump() {\n    if (!isJumping && gameStarted) {\n        isJumping = true;\n        dinoYSpeed = -jumpStrength;\n    }\n}\n\ndocument.addEventListener('keydown', event => {\n    if (event.code === 'KeyW' && !gameover) {\n        if (!gameStarted) {\n            gameStarted = true;\n            draw();\n        }\n        jump();\n    }\n});\n\nfunction retry() {\n    document.location.reload();\n}\n\nfunction drawDino() {\n    ctx.drawImage(dinoImage, 50, dinoY, 30, 30);\n}\n\nfunction drawObstacles() {\n    obstacles.forEach(obstacle => {\n        ctx.drawImage(cactusImage, obstacle.x, canvas.height - obstacle.height, obstacle.width, obstacle.height);\n    });\n}\n\nfunction updateDino() {\n    dinoY += dinoYSpeed;\n    dinoYSpeed += gravity;\n\n    if (dinoY >= canvas.height - 40) {\n        dinoY = canvas.height - 40;\n        dinoYSpeed = 0;\n        isJumping = false;\n    }\n}\n\nfunction updateObstacles() {\n    obstacles.forEach(obstacle => {\n        obstacle.x -= 5;\n    });\n\n    if (obstacleSpawnCounter <= 0) {\n        if (Math.random() < 0.02) {\n            let numObstacles = Math.floor(Math.random() * 3) + 1; // Генеруємо випадкову кількість від 1 до 3\n            let lastObstacleX = canvas.width; // Зберігаємо x координату останнього куща для перевірки відступу\n            for (let i = 0; i < numObstacles; i++) {\n                let minSpacing = 5; // Мінімальний відступ між кущами\n                let maxSpacing = 20; // Максимальний відступ між кущами\n                let spacing = minSpacing + Math.random() * (maxSpacing - minSpacing); // Випадкове значення відступу між кущами\n                obstacles.push({\n                    x: lastObstacleX + spacing, // Додаємо випадковий відступ до x координати останнього куща\n                    width: 20 + Math.random() * 10,\n                    height: 20 + Math.random() * 70\n                });\n                lastObstacleX = obstacles[obstacles.length - 1].x + obstacles[obstacles.length - 1].width; // Оновлюємо x координату останнього куща\n            }\n            obstacleSpawnCounter = obstacleSpawnInterval; // Скидаємо лічильник\n        }\n    } else {\n        obstacleSpawnCounter--;\n    }\n\n    obstacles = obstacles.filter(obstacle => obstacle.x > -obstacle.width);\n}\n\nfunction collisionDetection() {\n    obstacles.forEach(obstacle => {\n        if (dinoY + 30 >= canvas.height - obstacle.height && dinoY <= canvas.height && 50 + 30 >= obstacle.x && 50 <= obstacle.x + obstacle.width) {\n            gameover = true;\n            document.getElementById('retryButton').style.display = 'block';\n        }\n    });\n}\n\nfunction draw() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    drawDino();\n    drawObstacles();\n    updateDino();\n    updateObstacles();\n    collisionDetection();\n    if (!gameover) {\n        requestAnimationFrame(draw);\n    }\n    obstacleSpawnCounter--; // Додайте цей рядок для обнулення лічильника під час кожної анімаційної кадру\n}\n\ndocument.getElementById('retryButton').onclick = retry;"],"names":["$2d925b73e8222a71$var$canvas","document","getElementById","$2d925b73e8222a71$var$ctx","getContext","$2d925b73e8222a71$var$isJumping","$2d925b73e8222a71$var$dinoY","height","$2d925b73e8222a71$var$dinoYSpeed","$2d925b73e8222a71$var$obstacles","$2d925b73e8222a71$var$dinoImage","Image","$2d925b73e8222a71$var$cactusImage","src","$2d925b73e8222a71$var$gameover","$2d925b73e8222a71$var$gameStarted","$2d925b73e8222a71$var$obstacleSpawnCounter","addEventListener","event","code","$2d925b73e8222a71$var$draw","clearRect","width","drawImage","forEach","obstacle","x","$2d925b73e8222a71$var$updateObstacles","Math","random","numObstacles","floor","lastObstacleX","i","spacing","minSpacing","maxSpacing","push","length","filter","style","display","requestAnimationFrame","onclick","location","reload"],"version":3,"file":"index.bd889465.js.map"}